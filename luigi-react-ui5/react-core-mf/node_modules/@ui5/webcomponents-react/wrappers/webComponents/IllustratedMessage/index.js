'use client';

import { IllustrationMessageType, IllustrationMessageSize } from '../../enums';
import { withWebComponent } from '../../internal/withWebComponent';
/**
 * An IllustratedMessage is a recommended combination of a solution-oriented message, an engaging illustration, and conversational tone to better communicate an empty or a success state than just show a message alone. Each illustration has default internationalised title and subtitle texts. Also they can be managed with `titleText` and `subtitleText` properties. To display the desired illustration, use the `name` property, where you can find the list of all available illustrations.
 *
 * **Note:** By default the “BeforeSearch” illustration is loaded. To use other illustrations, make sure you import them in addition, for example:
 * `import "@ui5/webcomponents-fiori/dist/illustrations/NoData.js"`
 * **Note:** Illustrations starting with the “Tnt” prefix are part of another illustration set. For example to use the “TntSuccess” illustration, add the following import::
 * `import "@ui5/webcomponents-fiori/dist/illustrations/tnt/Success.js"`
 *
 *__Note:__ The `title` slot collides with the native HTML `title` attribute, so to customize the title (heading) of the component you need to pass it as slot. You can find out more about this [here](https://sap.github.io/ui5-webcomponents-react/?path=/docs/user-feedback-illustratedmessage--default-story#fully-customizable-title).
 *
 * __Note:__ This component is a web component developed by the UI5 Web Components’ team.
 *
 * <ui5-link href="https://sap.github.io/ui5-webcomponents/playground/components/IllustratedMessage" target="_blank">UI5 Web Components Playground</ui5-link>
 */
const IllustratedMessage = withWebComponent('ui5-illustrated-message', ['accessibleNameRef', 'name', 'size', 'subtitleText', 'titleText'], [], ['subtitle'], []);
IllustratedMessage.displayName = 'IllustratedMessage';
IllustratedMessage.defaultProps = {
  name: IllustrationMessageType.BeforeSearch,
  size: IllustrationMessageSize.Auto
};
export { IllustratedMessage };