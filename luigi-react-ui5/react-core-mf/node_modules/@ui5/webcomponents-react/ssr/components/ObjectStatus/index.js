'use client';

import alertIcon from '@ui5/webcomponents-icons/dist/alert.js';
import errorIcon from '@ui5/webcomponents-icons/dist/error.js';
import informationIcon from '@ui5/webcomponents-icons/dist/information.js';
import successIcon from '@ui5/webcomponents-icons/dist/sys-enter-2.js';
import { clsx } from 'clsx';
import React, { forwardRef } from 'react';
import { createUseStyles } from 'react-jss';
import { ValueState } from '../../enums/ValueState';
import { Icon } from '../../webComponents/Icon';
import styles from './ObjectStatus.jss';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
const getDefaultIcon = state => {
  switch (state) {
    case ValueState.Error:
      return /*#__PURE__*/_jsx(Icon, {
        name: errorIcon,
        "data-component-name": "ObjectStatusDefaultIcon"
      });
    case ValueState.Success:
      return /*#__PURE__*/_jsx(Icon, {
        name: successIcon,
        "data-component-name": "ObjectStatusDefaultIcon"
      });
    case ValueState.Warning:
      return /*#__PURE__*/_jsx(Icon, {
        name: alertIcon,
        "data-component-name": "ObjectStatusDefaultIcon"
      });
    case ValueState.Information:
      return /*#__PURE__*/_jsx(Icon, {
        name: informationIcon,
        "data-component-name": "ObjectStatusDefaultIcon"
      });
    default:
      return null;
  }
};
const useStyles = createUseStyles(styles, {
  name: 'ObjectStatus'
});

/**
 * Status information that can be either text with a value state, or an icon.
 */
const ObjectStatus = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    state,
    showDefaultIcon,
    children,
    icon,
    className,
    style,
    active,
    inverted,
    onClick,
    ...rest
  } = props;
  const iconToRender = (() => {
    if (icon) {
      return icon;
    }
    if (showDefaultIcon) {
      return getDefaultIcon(state);
    }
    return null;
  })();
  const classes = useStyles();
  const objStatusClasses = clsx(classes.objectStatus, classes[`${state}`.toLowerCase()], active && classes.active, inverted && classes.inverted, className);
  return /*#__PURE__*/_jsxs("div", {
    ref: ref,
    className: objStatusClasses,
    style: style,
    onClick: active ? onClick : undefined,
    ...rest,
    children: [iconToRender && /*#__PURE__*/_jsx("span", {
      className: classes.icon,
      children: iconToRender
    }), children && /*#__PURE__*/_jsx("span", {
      className: classes.text,
      children: children
    })]
  });
});
ObjectStatus.displayName = 'ObjectStatus';
ObjectStatus.defaultProps = {
  state: ValueState.None
};
export { ObjectStatus };