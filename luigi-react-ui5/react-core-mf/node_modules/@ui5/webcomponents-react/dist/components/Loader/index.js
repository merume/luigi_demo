'use client';

import { useI18nBundle } from '@ui5/webcomponents-react-base';
import { clsx } from 'clsx';
import React, { forwardRef, useEffect, useState } from 'react';
import { createUseStyles } from 'react-jss';
import { LoaderType } from '../../enums/LoaderType';
import { PLEASE_WAIT } from '../../i18n/i18n-defaults';
import { styles } from './Loader.jss';
const useStyles = createUseStyles(styles, {
  name: 'Loader'
});
/**
 * The `Loader` signals that an operation is currently being executed. It uses as little space as possible to allow the user to interact with the UI.<br />
 * It can be used to signal a data update on an already existing dataset, or where an expansion will happen.
 */
const Loader = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    className,
    type,
    progress,
    slot,
    style,
    delay,
    ...rest
  } = props;
  const classes = useStyles();
  const [isVisible, setIsVisible] = useState(delay === 0);
  const loaderClasses = clsx(classes.loader, className, classes[`loader${type}`]);
  const backgroundSize = type !== LoaderType.Determinate ? '40%' : progress;
  useEffect(() => {
    let timeout;
    if (delay > 0) {
      timeout = setTimeout(() => {
        setIsVisible(true);
      }, delay);
    }
    return () => {
      clearTimeout(timeout);
    };
  }, []);
  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');
  if (!isVisible) {
    return null;
  }
  return /*#__PURE__*/React.createElement("div", {
    ref: ref,
    className: loaderClasses,
    "data-component-name": "Loader",
    "aria-busy": "true",
    role: "progressbar",
    title: i18nBundle.getText(PLEASE_WAIT),
    slot: slot,
    style: {
      ...style,
      backgroundSize
    },
    ...rest
  });
});
Loader.defaultProps = {
  type: LoaderType.Indeterminate,
  progress: '0px',
  delay: 0
};
Loader.displayName = 'Loader';
export { Loader };