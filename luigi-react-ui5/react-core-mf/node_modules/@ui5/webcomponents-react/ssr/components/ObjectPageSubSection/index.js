'use client';

import { ThemingParameters } from '@ui5/webcomponents-react-base';
import { clsx } from 'clsx';
import React, { forwardRef } from 'react';
import { createUseStyles } from 'react-jss';
import { FlexBoxAlignItems, FlexBoxDirection, FlexBoxJustifyContent } from '../../enums';
import { CustomThemingParameters } from '../../themes/CustomVariables';
import { FlexBox } from '../FlexBox';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
const styles = {
  objectPageSubSection: {
    '&:focus': {
      outline: `${ThemingParameters.sapContent_FocusWidth} ${ThemingParameters.sapContent_FocusStyle} ${ThemingParameters.sapContent_FocusColor}`,
      outlineOffset: `calc(-1 * ${ThemingParameters.sapContent_FocusWidth})`
    }
  },
  headerContainer: {
    marginBlockEnd: '0.5rem',
    '& >:first-child': {
      marginInline: '0 0.25rem'
    },
    '& >:last-child:not(:first-child)': {
      marginInline: '0.25rem 0'
    },
    '& > *:not(:first-child):not(:last-child)': {
      marginInline: '0.25rem'
    }
  },
  subSectionTitle: {
    fontSize: ThemingParameters.sapFontHeader5Size,
    color: ThemingParameters.sapGroup_TitleTextColor,
    flexGrow: 1
  },
  subSectionContent: {
    backgroundColor: CustomThemingParameters.ObjectPageSubSectionBackgroundColor,
    borderRadius: CustomThemingParameters.ObjectPageSubSectionBorderRadius,
    paddingInline: '0.5rem',
    paddingBlock: '1rem'
  },
  spacer: {
    flexGrow: 1
  },
  uppercase: {
    textTransform: 'uppercase'
  }
};
const useStyles = createUseStyles(styles, {
  name: 'ObjectPageSubSection'
});
/**
 * Second-level information container of an `ObjectPage`.<br />
 * __Note:__ This component should only be used inside an `ObjectPageSection` component.
 */
const ObjectPageSubSection = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    children,
    id,
    titleText,
    className,
    style,
    actions,
    hideTitleText,
    titleTextLevel = 'H4',
    titleTextUppercase,
    ...rest
  } = props;
  const htmlId = `ObjectPageSubSection-${id}`;
  const classes = useStyles();
  const subSectionClassName = clsx(classes.objectPageSubSection, className);
  return /*#__PURE__*/_jsxs("div", {
    ref: ref,
    role: "region",
    style: style,
    tabIndex: -1,
    ...rest,
    className: subSectionClassName,
    id: htmlId,
    "data-component-name": "ObjectPageSubSection",
    children: [/*#__PURE__*/_jsxs(FlexBox, {
      direction: FlexBoxDirection.Row,
      justifyContent: FlexBoxJustifyContent.SpaceBetween,
      alignItems: FlexBoxAlignItems.Center,
      className: classes.headerContainer,
      "data-component-name": "ObjectPageSubSectionHeaderContainer",
      children: [!hideTitleText ? /*#__PURE__*/_jsx("div", {
        role: "heading",
        "aria-level": parseInt(titleTextLevel.slice(1)),
        className: clsx(classes.subSectionTitle, titleTextUppercase && classes.uppercase),
        "data-component-name": "ObjectPageSubSectionTitleText",
        children: titleText
      }) : /*#__PURE__*/_jsx("span", {
        "aria-hidden": "true",
        className: classes.spacer
      }), actions && actions]
    }), /*#__PURE__*/_jsx("div", {
      className: classes.subSectionContent,
      "data-component-name": "ObjectPageSubSectionContent",
      children: children
    })]
  });
});
ObjectPageSubSection.displayName = 'ObjectPageSubSection';
export { ObjectPageSubSection };