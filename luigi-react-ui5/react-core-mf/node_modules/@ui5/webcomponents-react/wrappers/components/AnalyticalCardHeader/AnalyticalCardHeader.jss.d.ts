declare const styles: {
    helpText: {
        fontFamily: string;
        fontSize: string;
        fontWeight: string;
        color: string;
    };
    cardHeader: {
        position: string;
        backgroundColor: string;
        '&:focus:before': {
            outline: string;
            content: string;
            position: string;
            border: string;
            pointerEvents: string;
            top: string;
            left: string;
            right: string;
            bottom: string;
            borderTopLeftRadius: string;
            borderTopRightRadius: string;
            borderBottomLeftRadius: string;
            borderBottomRightRadius: string;
        };
        '&:focus-visible': {
            outline: string;
        };
        padding: string;
    };
    cardHeaderClickable: {
        cursor: string;
    };
    headerTitles: {
        flex: string;
        display: string;
        flexDirection: string;
        justifyContent: string;
        minWidth: string;
        width: string;
    };
    headerFirstLine: {
        display: string;
        justifyContent: string;
        width: string;
    };
    headerSecondLine: {
        position: string;
        fontFamily: string;
        fontSize: string;
        fontWeight: string;
        color: string;
        minHeight: string;
        flexGrow: string;
        margin: string;
        display: string;
        alignItems: string;
        whiteSpace: string;
        wordWrap: string;
        overflow: string;
        textAlign: string;
        textOverflow: string;
        marginTop: string;
        width: string;
        WebkitLineClamp: string;
        WebkitBoxOrient: string;
    };
    headerText: {
        fontFamily: string;
        fontWeight: string;
        fontSize: string;
        color: string;
        overflow: string;
        WebkitLineClamp: string;
        WebkitBoxOrient: string;
        whiteSpace: string;
        wordWrap: string;
        textAlign: string;
        textOverflow: string;
    };
    status: {
        fontSize: string;
        color: string;
        lineHeight: string;
        textAlign: string;
        marginInlineStart: string;
        marginBlockStart: string;
    };
    unitOfMeasurement: {
        marginInlineStart: string;
        paddingInlineStart: string;
        borderInlineStart: string;
    };
    helpIcon: {
        position: string;
        right: string;
        top: string;
    };
    kpiContent: {
        display: string;
        alignItems: string;
        marginTop: string;
    };
    mainIndicator: {
        color: string;
        display: string;
        justifyContent: string;
        position: string;
        whiteSpace: string;
        textAlign: string;
        textOverflow: string;
        fontSize: string;
        fontFamily: string;
        fontWeight: string;
    };
    value: {
        paddingBlockStart: string;
        height: string;
        fontFamily: string;
    };
    indicatorAndUnit: {
        display: string;
        textOverflow: string;
        textAlign: string;
        height: string;
        paddingInlineStart: string;
        paddingBlock: string;
    };
    indicator: {
        gridColumn: number;
        gridRow: number;
        width: string;
        height: string;
        color: string;
    };
    unit: {
        gridColumn: number;
        gridRow: number;
        marginTop: string;
        fontFamily: string;
        fontSize: string;
    };
    indicatorGap: {
        flex: string;
        maxWidth: string;
    };
    sideIndicators: {
        display: string;
        padding: string;
        minWidth: number;
        '& > *': {
            marginInlineEnd: string;
        };
        '&:last-child': {
            marginInlineEnd: number;
        };
    };
    description: {
        fontFamily: string;
        fontSize: string;
        fontWeight: string;
        color: string;
        whiteSpace: string;
        overflow: string;
        textAlign: string;
        textOverflow: string;
        marginTop: string;
        width: string;
        display: string;
        lineHeight: string;
        maxHeight: string;
        WebkitLineClamp: string;
        WebkitBoxOrient: string;
    };
    good: {
        color: string;
    };
    error: {
        color: string;
    };
    critical: {
        color: string;
    };
    neutral: {
        color: string;
    };
};
export default styles;
