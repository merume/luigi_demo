{"version":3,"file":"SegmentedButton.js","sourceRoot":"","sources":["../src/SegmentedButton.ts"],"names":[],"mappings":"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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport type { ResizeObserverCallback } from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport { renderFinished } from \"@ui5/webcomponents-base/dist/Render.js\";\nimport {\n\tisSpace,\n\tisEnter,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { SEGMENTEDBUTTON_ARIA_DESCRIPTION, SEGMENTEDBUTTON_ARIA_DESCRIBEDBY } from \"./generated/i18n/i18n-defaults.js\";\nimport SegmentedButtonItem from \"./SegmentedButtonItem.js\";\n\n// Template\nimport SegmentedButtonTemplate from \"./generated/templates/SegmentedButtonTemplate.lit.js\";\n\n// Styles\nimport SegmentedButtonCss from \"./generated/themes/SegmentedButton.css.js\";\n\ntype SegmentedButtonSelectionChangeEventDetail = {\n\tselectedItem: SegmentedButtonItem,\n}\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-segmented-button</code> shows a group of items. When the user clicks or taps\n * one of the items, it stays in a pressed state. It automatically resizes the items\n * to fit proportionally within the component. When no width is set, the component uses the available width.\n * <br><br>\n * <b>Note:</b> There can be just one selected <code>item</code> at a time.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/SegmentedButton\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webc.main.SegmentedButton\n * @extends sap.ui.webc.base.UI5Element\n * @tagname ui5-segmented-button\n * @since 1.0.0-rc.6\n * @appenddocs sap.ui.webc.main.SegmentedButtonItem\n * @public\n */\n@customElement({\n\ttag: \"ui5-segmented-button\",\n\tlanguageAware: true,\n\trenderer: litRender,\n\ttemplate: SegmentedButtonTemplate,\n\tstyles: SegmentedButtonCss,\n\tdependencies: [SegmentedButtonItem],\n})\n/**\n * Fired when the selected item changes.\n *\n * @event sap.ui.webc.main.SegmentedButton#selection-change\n * @param {HTMLElement} selectedItem the pressed item.\n * @public\n */\n@event(\"selection-change\", {\n\tdetail: {\n\t\tselectedItem: { type: HTMLElement },\n\t},\n})\nclass SegmentedButton extends UI5Element {\n\t/**\n\t * Defines the accessible ARIA name of the component.\n\t *\n\t * @type {string}\n\t * @defaultvalue undefined\n\t * @public\n\t * @name sap.ui.webc.main.SegmentedButton.prototype.accessibleName\n\t * @since 1.0.3\n\t */\n\t@property({ defaultValue: undefined })\n\taccessibleName?: string;\n\n\t/**\n\t * Defines the items of <code>ui5-segmented-button</code>.\n\t * <br><br>\n\t * <b>Note:</b> Multiple items are allowed.\n\t * <br><br>\n\t * <b>Note:</b> Use the <code>ui5-segmented-button-item</code> for the intended design.\n\t * @type {sap.ui.webc.main.ISegmentedButtonItem[]}\n\t * @name sap.ui.webc.main.SegmentedButton.prototype.default\n\t * @slot items\n\t * @public\n\t */\n\t@slot({ type: HTMLElement, invalidateOnChildChange: true, \"default\": true })\n\titems!: Array<SegmentedButtonItem>;\n\n\tstatic i18nBundle: I18nBundle;\n\n\t_itemNavigation: ItemNavigation;\n\n\tabsoluteWidthSet: boolean // set to true whenever we set absolute width to the component\n\tpercentageWidthSet: boolean; // set to true whenever we set 100% width to the component\n\thasPreviouslyFocusedItem: boolean;\n\n\t_handleResizeBound: ResizeObserverCallback;\n\n\twidths?: Array<number>;\n\t_selectedItem?: SegmentedButtonItem;\n\n\tstatic async onDefine() {\n\t\tSegmentedButton.i18nBundle = await getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._itemNavigation = new ItemNavigation(this, {\n\t\t\tgetItemsCallback: () => this.getSlottedNodes<SegmentedButtonItem>(\"items\"),\n\t\t});\n\n\t\tthis.absoluteWidthSet = false; // true when component width is set to absolute\n\t\tthis.percentageWidthSet = false; // true when component width is set to 100%\n\t\tthis.hasPreviouslyFocusedItem = false;\n\n\t\tthis._handleResizeBound = this._doLayout.bind(this);\n\t}\n\n\tonEnterDOM() {\n\t\tResizeHandler.register(this.parentNode as HTMLElement, this._handleResizeBound);\n\t}\n\n\tonExitDOM() {\n\t\tif (this.parentNode) {\n\t\t\tResizeHandler.deregister(this.parentNode as HTMLElement, this._handleResizeBound);\n\t\t}\n\t}\n\n\tonBeforeRendering() {\n\t\tconst items = this.getSlottedNodes<SegmentedButtonItem>(\"items\");\n\n\t\titems.forEach((item, index, arr) => {\n\t\t\titem.posInSet = index + 1;\n\t\t\titem.sizeOfSet = arr.length;\n\t\t});\n\n\t\tthis.normalizeSelection();\n\t}\n\n\tasync onAfterRendering() {\n\t\tawait this._doLayout();\n\t}\n\n\tprepareToMeasureItems() {\n\t\tthis.style.width = \"\";\n\t\tthis.items.forEach(item => {\n\t\t\titem.style.width = \"\";\n\t\t});\n\t}\n\n\tasync measureItemsWidth() {\n\t\tawait renderFinished();\n\t\tthis.prepareToMeasureItems();\n\n\t\tthis.widths = this.items.map(item => {\n\t\t\t// 1 is added because for width 100.44px the offsetWidth property is 100px and not 101px\n\t\t\treturn item.offsetWidth + 1;\n\t\t});\n\t}\n\n\tnormalizeSelection() {\n\t\tconst selectedItems = this.items.filter(item => item.pressed);\n\t\tconst selectedIndex = this._selectedItem ? selectedItems.indexOf(this._selectedItem) : -1;\n\n\t\tif (this._selectedItem && selectedItems.length > 1) {\n\t\t\tselectedItems.splice(selectedIndex, 1);\n\t\t}\n\t\tthis._selectedItem = selectedItems.pop();\n\n\t\tif (this._selectedItem) {\n\t\t\tthis.items.forEach(item => {\n\t\t\t\titem.pressed = false;\n\t\t\t});\n\t\t\tthis._selectedItem.pressed = true;\n\t\t}\n\t}\n\n\t_selectItem(e: MouseEvent | KeyboardEvent) {\n\t\tconst target = e.target as SegmentedButtonItem;\n\t\tconst isTargetSegmentedButtonItem = target.hasAttribute(\"ui5-segmented-button-item\");\n\n\t\tif (target.disabled || target === this.getDomRef() || !isTargetSegmentedButtonItem) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (target !== this._selectedItem) {\n\t\t\tif (this._selectedItem) {\n\t\t\t\tthis._selectedItem.pressed = false;\n\t\t\t}\n\t\t\tthis._selectedItem = target;\n\t\t\tthis.fireEvent<SegmentedButtonSelectionChangeEventDetail>(\"selection-change\", {\n\t\t\t\tselectedItem: this._selectedItem,\n\t\t\t});\n\t\t}\n\n\t\tthis._selectedItem.pressed = true;\n\t\tthis._itemNavigation.setCurrentItem(this._selectedItem);\n\n\t\tthis.selectedItem!.focus();\n\n\t\treturn this;\n\t}\n\n\t_onclick(e: MouseEvent) {\n\t\tthis._selectItem(e);\n\t}\n\n\t_onkeydown(e: KeyboardEvent) {\n\t\tif (isEnter(e)) {\n\t\t\tthis._selectItem(e);\n\t\t} else if (isSpace(e)) {\n\t\t\te.preventDefault();\n\t\t}\n\t}\n\n\t_onkeyup(e: KeyboardEvent) {\n\t\tif (isSpace(e)) {\n\t\t\tthis._selectItem(e);\n\t\t}\n\t}\n\n\t_onmousedown(e: MouseEvent) {\n\t\tconst eventTarget = e.target as SegmentedButtonItem;\n\t\tconst isTargetSegmentedButtonItem = eventTarget.hasAttribute(\"ui5-segmented-button-item\");\n\n\t\tif (isTargetSegmentedButtonItem) {\n\t\t\teventTarget.focus();\n\t\t\tthis._itemNavigation.setCurrentItem(eventTarget);\n\t\t\tthis.hasPreviouslyFocusedItem = true;\n\t\t}\n\t}\n\n\t_onfocusin(e: FocusEvent) {\n\t\t// If the component was previously focused,\n\t\t// update the ItemNavigation to sync the button's tabindex values\n\t\tif (this.hasPreviouslyFocusedItem) {\n\t\t\tthis._itemNavigation.setCurrentItem(e.target as SegmentedButtonItem);\n\t\t\treturn;\n\t\t}\n\n\t\t// If the component is focused for the first time\n\t\t// focus the selected item if such is present\n\t\tif (this.selectedItem) {\n\t\t\tthis.selectedItem.focus();\n\t\t\tthis._itemNavigation.setCurrentItem(this._selectedItem!);\n\t\t\tthis.hasPreviouslyFocusedItem = true;\n\t\t}\n\t}\n\n\tasync _doLayout(): Promise<void> {\n\t\tconst itemsHaveWidth = this.widths && this.widths.some(itemWidth => itemWidth > 2); // 2 pixels added for rounding\n\t\tif (!itemsHaveWidth) {\n\t\t\tawait this.measureItemsWidth();\n\t\t}\n\n\t\tconst parentWidth = this.parentNode ? (this.parentNode as HTMLElement).offsetWidth : 0;\n\n\t\tif (!this.style.width || this.percentageWidthSet) {\n\t\t\tthis.style.width = `${Math.max(...this.widths!) * this.items.length}px`;\n\t\t\tthis.absoluteWidthSet = true;\n\t\t}\n\n\t\tthis.items.forEach(item => {\n\t\t\titem.style.width = \"100%\";\n\t\t});\n\n\t\tif (parentWidth <= this.offsetWidth && this.absoluteWidthSet) {\n\t\t\tthis.style.width = \"100%\";\n\t\t\tthis.percentageWidthSet = true;\n\t\t}\n\t}\n\n\t/**\n\t * Currently selected item.\n\t *\n\t * @readonly\n\t * @type {sap.ui.webc.main.ISegmentedButtonItem}\n\t * @name sap.ui.webc.main.SegmentedButton.prototype.selectedItem\n\t * @public\n\t */\n\tget selectedItem() {\n\t\treturn this._selectedItem;\n\t}\n\n\tget ariaDescribedBy() {\n\t\treturn SegmentedButton.i18nBundle.getText(SEGMENTEDBUTTON_ARIA_DESCRIBEDBY);\n\t}\n\n\tget ariaDescription() {\n\t\treturn SegmentedButton.i18nBundle.getText(SEGMENTEDBUTTON_ARIA_DESCRIPTION);\n\t}\n}\n\nSegmentedButton.define();\n\nexport default SegmentedButton;\n"]}