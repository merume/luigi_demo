var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import customElement from "@ui5/webcomponents-base/dist/decorators/customElement.js";
import property from "@ui5/webcomponents-base/dist/decorators/property.js";
/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 * A component that represents a logical step as part of the <code>ui5-wizard</code>.
 * It is meant to aggregate arbitrary HTML elements that form the content of a single step.
 *
 * <h3>Structure</h3>
 * <ul>
 * <li>Each wizard step has arbitrary content.</li>
 * <li>Each wizard step might have texts - defined by the <code>titleText</code> and <code>subtitleText</code> properties.</li>
 * <li>Each wizard step might have an icon - defined by the <code>icon</code> property.</li>
 * <li>Each wizard step might display a number in place of the <code>icon</code>, when it's missing.</li>
 * </ul>
 *
 * <h3>Usage</h3>
 * The <code>ui5-wizard-step</code> component should be used only as slot of the <code>ui5-wizard</code> component
 * and should not be used standalone.
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.fiori.WizardStep
 * @extends sap.ui.webc.base.UI5Element
 * @abstract
 * @tagname ui5-wizard-step
 * @since 1.0.0-rc.10
 * @implements sap.ui.webc.fiori.IWizardStep
 * @public
 */
let WizardStep = class WizardStep extends UI5Element {
};
__decorate([
    property()
], WizardStep.prototype, "titleText", void 0);
__decorate([
    property()
], WizardStep.prototype, "subtitleText", void 0);
__decorate([
    property()
], WizardStep.prototype, "icon", void 0);
__decorate([
    property({ type: Boolean })
], WizardStep.prototype, "disabled", void 0);
__decorate([
    property({ type: Boolean })
], WizardStep.prototype, "selected", void 0);
__decorate([
    property({ type: Boolean })
], WizardStep.prototype, "branching", void 0);
WizardStep = __decorate([
    customElement("ui5-wizard-step")
], WizardStep);
WizardStep.define();
export default WizardStep;
//# sourceMappingURL=WizardStep.js.map