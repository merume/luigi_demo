import React from 'react';
import { ValueState } from '../../../enums/ValueState';
const baseStyles = {
  width: '100%',
  height: '100%'
};
const StyleClassMap = new Map();
StyleClassMap.set(ValueState.None, undefined);
StyleClassMap.set(ValueState.Success, 'valueStateSuccess');
StyleClassMap.set(ValueState.Warning, 'valueStateWarning');
StyleClassMap.set(ValueState.Error, 'valueStateError');
StyleClassMap.set(ValueState.Information, 'valueStateInformation');

/*
 * COMPONENTS
 */
const Header = () => /*#__PURE__*/React.createElement("div", {
  style: {
    width: '6px'
  }
});
const Cell = instance => {
  const {
    cell,
    webComponentsReactProperties
  } = instance;
  const styleClass = StyleClassMap.get(cell.value) ? webComponentsReactProperties.classes[StyleClassMap.get(cell.value)] : undefined;
  return /*#__PURE__*/React.createElement("div", {
    style: baseStyles,
    className: styleClass,
    "data-component-name": "AnalyticalTableHighlightCell"
  });
};

/*
 * TABLE HOOKS
 */
const columnsDeps = (deps, _ref) => {
  let {
    instance: {
      webComponentsReactProperties
    }
  } = _ref;
  return [...deps, webComponentsReactProperties.withRowHighlight, webComponentsReactProperties.highlightField];
};
const visibleColumnsDeps = (deps, _ref2) => {
  let {
    instance
  } = _ref2;
  return [...deps, instance.webComponentsReactProperties.withRowHighlight];
};
const visibleColumns = (currentVisibleColumns, _ref3) => {
  let {
    instance: {
      webComponentsReactProperties
    }
  } = _ref3;
  if (!webComponentsReactProperties.withRowHighlight) {
    return currentVisibleColumns.filter(_ref4 => {
      let {
        id
      } = _ref4;
      return id !== '__ui5wcr__internal_highlight_column';
    });
  }
  const highlightColumn = currentVisibleColumns.find(_ref5 => {
    let {
      id
    } = _ref5;
    return id === '__ui5wcr__internal_highlight_column';
  });
  return [highlightColumn, ...currentVisibleColumns.filter(_ref6 => {
    let {
      id
    } = _ref6;
    return id !== '__ui5wcr__internal_highlight_column';
  })];
};
const columns = (currentColumns, _ref7) => {
  let {
    instance
  } = _ref7;
  const {
    withRowHighlight,
    highlightField
  } = instance.webComponentsReactProperties;
  if (!withRowHighlight) {
    return currentColumns;
  }
  return [{
    id: '__ui5wcr__internal_highlight_column',
    accessor: highlightField,
    disableFilters: true,
    disableSortBy: true,
    disableGroupBy: true,
    disableResizing: true,
    disableDragAndDrop: true,
    width: 6,
    minWidth: 6,
    maxWidth: 6,
    Header,
    Cell
  }, ...currentColumns];
};
export const useRowHighlight = hooks => {
  hooks.columns.push(columns);
  hooks.columnsDeps.push(columnsDeps);
  hooks.visibleColumnsDeps.push(visibleColumnsDeps);
  hooks.visibleColumns.push(visibleColumns);
};
useRowHighlight.pluginName = 'useRowHighlight';