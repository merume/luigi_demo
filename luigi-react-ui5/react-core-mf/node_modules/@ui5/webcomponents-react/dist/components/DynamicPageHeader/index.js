'use client';

import { clsx } from 'clsx';
import React, { forwardRef, useMemo } from 'react';
import { createUseStyles } from 'react-jss';
import { DynamicPageHeaderStyles } from './DynamicPageHeader.jss';
const useStyles = createUseStyles(DynamicPageHeaderStyles, {
  name: 'DynamicPageHeader'
});

/**
 * The dynamic page header contains the header content of the dynamic page.
 * This component can be collapsed and pinned by the anchorbar.
 */
const DynamicPageHeader = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    children,
    headerPinned,
    topHeaderHeight,
    className,
    style,
    ...rest
  } = props;
  const headerStyles = useMemo(() => {
    if (headerPinned) {
      return {
        ...style,
        top: `${topHeaderHeight}px`,
        zIndex: 1
      };
    }
    return style;
  }, [headerPinned, topHeaderHeight, style]);
  const classes = useStyles();
  const classNames = clsx(classes.header, className);
  return /*#__PURE__*/React.createElement("div", {
    ref: ref,
    ...rest,
    className: classNames,
    "data-component-name": "DynamicPageHeader",
    style: headerStyles
  }, children);
});
DynamicPageHeader.displayName = 'DynamicPageHeader';
export { DynamicPageHeader };