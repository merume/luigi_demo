import React, { ReactElement, ReactNode } from 'react';
import { CommonProps } from '../../interfaces';
import { ToolbarPropTypes } from '../Toolbar';
export interface DynamicPageTitlePropTypes extends CommonProps {
    /**
     * The `DynamicPageTitle` actions.
     *
     * __Note:__ When clicking on an action in the overflow popover it closes the popover. You can use `event.preventDefault()` to prevent this.
     */
    actions?: ReactElement | ReactElement[];
    /**
     * The `breadcrumbs` displayed in the `DynamicPageTitle` top-left area.
     *
     * __Note:__ Although this prop accepts all HTML Elements, it is strongly recommended that you only use `Breadcrumbs` in order to preserve the intended design.
     */
    breadcrumbs?: ReactNode | ReactNode[];
    /**
     * The content is positioned in the `DynamicPageTitle` middle area
     */
    children?: ReactNode | ReactNode[];
    /**
     * The `header` is positioned in the `DynamicPageTitle` left area.
     * Use this prop to display a `Title` (or any other component that serves as a heading).
     */
    header?: ReactNode;
    /**
     * The `subHeader` is positioned in the `DynamicPageTitle` left area below the `header`.
     * Use this aggregation to display a component like `Label` or any other component that serves as sub header.
     */
    subHeader?: ReactNode;
    /**
     * The `DynamicPageTitle` navigation actions.<br />
     * *Note*: The `navigationActions` position depends on the control size.
     * If the control size is 1280px or bigger, they are rendered right next to the actions.
     * Otherwise, they are rendered in the top-right area, above the actions.
     * If a large number of elements(buttons) are used, there could be visual degradations as the space for the `navigationActions` is limited.
     *
     * __Note:__ When clicking on an action in the overflow popover it closes the popover. You can use `event.preventDefault()` to prevent this.
     */
    navigationActions?: ReactElement | ReactElement[];
    /**
     * Display the `subHeader` on the right instead of below the `header`.
     */
    showSubHeaderRight?: boolean;
    /**
     * Use this prop to customize the "actions" `Toolbar`.
     *
     * __Note:__ It is possible to overwrite internal implementations. Please use with caution!
     */
    actionsToolbarProps?: Omit<ToolbarPropTypes, 'design' | 'toolbarStyle' | 'active'>;
    /**
     * Use this prop to customize the "navigationActions" `Toolbar`.
     *
     * __Note:__ It is possible to overwrite internal implementations. Please use with caution!
     */
    navigationActionsToolbarProps?: Omit<ToolbarPropTypes, 'design' | 'toolbarStyle' | 'active'>;
}
/**
 * The `DynamicPageTitle` component is part of the `DynamicPage` family and is used to serve as title of the `DynamicPage` and `ObjectPage`.
 * It can contain Breadcrumbs, Title, Subtitle, Content, KPIs and Actions.
 */
declare const DynamicPageTitle: React.ForwardRefExoticComponent<DynamicPageTitlePropTypes & React.RefAttributes<HTMLDivElement>>;
export { DynamicPageTitle };
