{"version":3,"file":"Toast.js","sourceRoot":"","sources":["../src/Toast.ts"],"names":[],"mappings":"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","sourcesContent":["import Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { getNextZIndex } from \"@ui5/webcomponents-base/dist/util/PopupUtils.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport ToastPlacement from \"./types/ToastPlacement.js\";\n\n// Template\nimport ToastTemplate from \"./generated/templates/ToastTemplate.lit.js\";\n\n// Styles\nimport ToastCss from \"./generated/themes/Toast.css.js\";\n\n// Constants\nconst MIN_DURATION = 500;\nconst MAX_DURATION = 1000;\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-toast</code> is a small, non-disruptive popup for success or information messages that\n * disappears automatically after a few seconds.\n *\n *\n * <h3>Usage</h3>\n *\n * <h4>When to use:</h4>\n * <ul>\n * <li>You want to display a short success or information message.</li>\n * <li>You do not want to interrupt users while they are performing an action.</li>\n * <li>You want to confirm a successful action.</li>\n * </ul>\n * <h4>When not to use:</h4>\n * <ul>\n * <li>You want to display error or warning message.</li>\n * <li>You want to interrupt users while they are performing an action.</li>\n * <li>You want to make sure that users read the message before they leave the page.</li>\n * <li>You want users to be able to copy some part of the message text.</li>\n * </ul>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Toast\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webc.main.Toast\n * @extends sap.ui.webc.base.UI5Element\n * @tagname ui5-toast\n * @public\n * @since 1.0.0-rc.6\n */\n@customElement({\n\ttag: \"ui5-toast\",\n\trenderer: litRender,\n\tstyles: ToastCss,\n\ttemplate: ToastTemplate,\n})\nclass Toast extends UI5Element {\n\t/**\n\t * Defines the duration in milliseconds for which component\n\t * remains on the screen before it's automatically closed.\n\t * <br><br>\n\t * <b>Note:</b> The minimum supported value is <code>500</code> ms\n\t * and even if a lower value is set, the duration would remain <code>500</code> ms.\n\t *\n\t * @type {sap.ui.webc.base.types.Integer}\n\t * @name sap.ui.webc.main.Toast.prototype.duration\n\t * @defaultvalue 3000\n\t * @public\n\t */\n\t@property({ validator: Integer, defaultValue: 3000 })\n\tduration!: number;\n\n\t/**\n\t * Defines the placement of the component.\n\t * <br><br>\n\t * Available options are:\n\t * <ul>\n\t * <li><code>TopStart</code></li>\n\t * <li><code>TopCenter</code></li>\n\t * <li><code>TopEnd</code></li>\n\t * <li><code>MiddleStart</code></li>\n\t * <li><code>MiddleCenter</code></li>\n\t * <li><code>MiddleEnd</code></li>\n\t * <li><code>BottomStart</code></li>\n\t * <li><code>BottomCenter</code></li>\n\t * <li><code>BottomEnd</code></li>\n\t * </ul>\n\t *\n\t * @type {sap.ui.webc.main.types.ToastPlacement}\n\t * @name sap.ui.webc.main.Toast.prototype.placement\n\t * @defaultvalue \"BottomCenter\"\n\t * @public\n\t */\n\t@property({ type: ToastPlacement, defaultValue: ToastPlacement.BottomCenter })\n\tplacement!: ToastPlacement;\n\n\t/**\n\t * Indicates whether the component is open (visible).\n\t * @type {boolean}\n\t * @private\n\t */\n\t@property({ type: Boolean })\n\topen!: boolean;\n\n\t/**\n\t * Indicates whether the component is hovered.\n\t * @type {boolean}\n\t * @private\n\t */\n\t@property({ type: Boolean })\n\thover!: boolean;\n\n\t/**\n\t * Indicates whether the component DOM is rendered.\n\t * @type {boolean}\n\t * @private\n\t */\n\t@property({ type: Boolean })\n\tdomRendered!: boolean;\n\n\t/**\n\t * Defines the text of the component.\n\t * <br><br>\n\t * <b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n\t *\n\t * @type {Node[]}\n\t * @slot\n\t * @public\n\t * @name sap.ui.webc.main.Toast.prototype.default\n\t */\n\n\t_reopen: boolean;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._reopen = false;\n\t}\n\n\tonAfterRendering() {\n\t\tif (this._reopen) {\n\t\t\tthis._reopen = false;\n\t\t\tthis._initiateOpening();\n\t\t}\n\t}\n\n\t/**\n\t * Shows the component.\n\t * @public\n\t */\n\tshow() {\n\t\tif (this.open) {\n\t\t\t// If the Toast is already opened, we set the _reopen flag to true, in\n\t\t\t// order to trigger re-rendering after an animation frame\n\t\t\t// in the onAfterRendering hook.\n\t\t\t// This is needed for properly resetting the opacity transition.\n\t\t\tthis._reopen = true;\n\t\t\tthis.open = false;\n\t\t} else {\n\t\t\tthis._initiateOpening();\n\t\t}\n\t}\n\n\t/**\n\t * If the minimum duration is lower than 500ms, we force\n\t * it to be 500ms, as described in the documentation.\n\t * @private\n\t * @returns {*}\n\t */\n\tget effectiveDuration() {\n\t\treturn this.duration < MIN_DURATION ? MIN_DURATION : this.duration;\n\t}\n\n\tget styles() {\n\t\t// Transition duration (animation) should be a third of the duration\n\t\t// property, but not bigger than the maximum allowed (1000ms).\n\t\tconst transitionDuration = Math.min(this.effectiveDuration / 3, MAX_DURATION);\n\n\t\treturn {\n\t\t\troot: {\n\t\t\t\t\"transition-duration\": this.open ? `${transitionDuration}ms` : \"\",\n\n\t\t\t\t// Transition delay is the duration property minus the\n\t\t\t\t// transition duration (animation).\n\t\t\t\t\"transition-delay\": this.open ? `${this.effectiveDuration - transitionDuration}ms` : \"\",\n\n\t\t\t\t// We alter the opacity property, in order to trigger transition\n\t\t\t\t\"opacity\": this.open && !this.hover ? \"0\" : \"\",\n\n\t\t\t\t\"z-index\": getNextZIndex(),\n\t\t\t},\n\t\t};\n\t}\n\n\t_initiateOpening() {\n\t\tthis.domRendered = true;\n\t\trequestAnimationFrame(() => {\n\t\t\tthis.open = true;\n\t\t});\n\t}\n\n\t_ontransitionend() {\n\t\tif (this.hover) {\n\t\t\treturn;\n\t\t}\n\t\tthis.domRendered = false;\n\t\tthis.open = false;\n\t}\n\n\t_onmouseover() {\n\t\tthis.hover = true;\n\t}\n\n\t_onmouseleave() {\n\t\tthis.hover = false;\n\t}\n}\n\nToast.define();\n\nexport default Toast;\n"]}