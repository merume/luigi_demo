import { clsx } from 'clsx';
import React, { forwardRef } from 'react';
import { createUseStyles } from 'react-jss';
import { ResponsiveGridLayoutStyles } from './ResponsiveGridLayout.jss';
const useStyles = createUseStyles(ResponsiveGridLayoutStyles, {
  name: 'ResponsiveGridLayout'
});

/**
 * The Responsive Grid Layout positions UI elements in a multi-column flow layout.
 * They can be configured to display a variable number of columns depending on available screen size.
 * With these controls, it is possible to achieve flexible layouts and line breaks for large, medium,
 * and small-sized screens, such as desktop, tablet, and mobile.
 *
 * @since 0.16.4
 */
const ResponsiveGridLayout = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    children,
    columnGap = '0.5rem',
    rowGap = '0.5rem',
    columnsS = 4,
    columnsM = 8,
    columnsL = 12,
    columnsXL = 16,
    columnSpanS = 1,
    columnSpanM = 1,
    columnSpanL = 1,
    columnSpanXL = 1,
    style,
    className,
    ...rest
  } = props;
  const classes = useStyles();
  const finalClassNames = clsx(classes.container, className);
  return /*#__PURE__*/React.createElement("div", {
    ref: ref,
    className: finalClassNames,
    style: {
      gridRowGap: rowGap,
      gridColumnGap: columnGap,
      '--_ui5wcr-rgl-columns-s': columnsS,
      '--_ui5wcr-rgl-columns-m': columnsM,
      '--_ui5wcr-rgl-columns-l': columnsL,
      '--_ui5wcr-rgl-columns-xl': columnsXL,
      '--_ui5wcr-rgl-column-span-s': columnSpanS,
      '--_ui5wcr-rgl-column-span-m': columnSpanM,
      '--_ui5wcr-rgl-column-span-l': columnSpanL,
      '--_ui5wcr-rgl-column-span-xl': columnSpanXL,
      ...style
    },
    ...rest
  }, children);
});
ResponsiveGridLayout.displayName = 'ResponsiveGridLayout';
export { ResponsiveGridLayout };