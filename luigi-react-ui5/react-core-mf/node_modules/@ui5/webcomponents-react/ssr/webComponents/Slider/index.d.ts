/// <reference types="react" />
import '@ui5/webcomponents/dist/Slider.js';
import { CommonProps } from '../../interfaces/CommonProps';
import { Ui5CustomEvent } from '../../interfaces/Ui5CustomEvent';
import { Ui5DomRef } from '../../interfaces/Ui5DomRef';
interface SliderAttributes {
    /**
     * Current value of the slider
     */
    value?: number;
    /**
     * Defines the accessible ARIA name of the component.
     */
    accessibleName?: string;
    /**
     * Defines whether the slider is in disabled state.
     */
    disabled?: boolean;
    /**
     * Displays a label with a value on every N-th step.
     *
     * **Note:** The step and tickmarks properties must be enabled. Example - if the step value is set to 2 and the label interval is also specified to 2 - then every second tickmark will be labelled, which means every 4th value number.
     */
    labelInterval?: number;
    /**
     * Defines the maximum value of the slider.
     */
    max?: number;
    /**
     * Defines the minimum value of the slider.
     */
    min?: number;
    /**
     * Enables tickmarks visualization for each step.
     *
     * **Note:** The step must be a positive number.
     */
    showTickmarks?: boolean;
    /**
     * Enables handle tooltip displaying the current value.
     */
    showTooltip?: boolean;
    /**
     * Defines the size of the slider's selection intervals (e.g. min = 0, max = 10, step = 5 would result in possible selection of the values 0, 5, 10).
     *
     * **Note:** If set to 0 the slider handle movement is disabled. When negative number or value other than a number, the component fallbacks to its default value.
     */
    step?: number;
}
export interface SliderDomRef extends SliderAttributes, Ui5DomRef {
}
export interface SliderPropTypes extends SliderAttributes, Omit<CommonProps, 'onChange' | 'onInput'> {
    /**
     * Fired when the value changes and the user has finished interacting with the slider.
     */
    onChange?: (event: Ui5CustomEvent<SliderDomRef>) => void;
    /**
     * Fired when the value changes due to user interaction that is not yet finished - during mouse/touch dragging.
     */
    onInput?: (event: Ui5CustomEvent<SliderDomRef>) => void;
}
/**
 * The Slider component represents a numerical range and a handle (grip). The purpose of the component is to enable visual selection of a value in a continuous numerical range by moving an adjustable handle.
 *
 * __Note:__ This component is a web component developed by the UI5 Web Componentsâ€™ team.
 *
 * <ui5-link href="https://sap.github.io/ui5-webcomponents/playground/components/Slider" target="_blank">UI5 Web Components Playground</ui5-link>
 */
declare const Slider: import("react").ForwardRefExoticComponent<SliderPropTypes & import("../../internal/withWebComponent").WithWebComponentPropTypes & import("react").RefAttributes<SliderDomRef>>;
export { Slider };
