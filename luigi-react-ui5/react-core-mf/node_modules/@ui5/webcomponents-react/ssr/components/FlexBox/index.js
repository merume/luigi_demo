import { clsx } from 'clsx';
import React, { forwardRef } from 'react';
import { createUseStyles } from 'react-jss';
import { FlexBoxAlignItems, FlexBoxDirection, FlexBoxJustifyContent, FlexBoxWrap } from '../../enums';
import { styles } from './FlexBox.jss';
import { jsx as _jsx } from "react/jsx-runtime";
const useStyles = createUseStyles(styles, {
  name: 'FlexBox'
});
/**
 * The `FlexBox` builds the container for a flexible box layout by leveraging the CSS flexbox layout.
 */
const FlexBox = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    children,
    justifyContent = FlexBoxJustifyContent.Start,
    direction = FlexBoxDirection.Row,
    alignItems = FlexBoxAlignItems.Stretch,
    displayInline,
    wrap = FlexBoxWrap.NoWrap,
    className,
    fitContainer,
    as = 'div',
    ...rest
  } = props;
  const classes = useStyles();
  const flexBoxClasses = clsx(classes.flexBox, classes[`flexBoxDirection${direction}`], classes[`justifyContent${justifyContent}`], classes[`alignItems${alignItems}`], classes[`flexWrap${wrap}`], displayInline && classes.flexBoxDisplayInline, fitContainer && classes.fitContainer, className);
  const CustomTag = as;
  return /*#__PURE__*/_jsx(CustomTag, {
    ref: ref,
    className: flexBoxClasses,
    ...rest,
    children: children
  });
});
FlexBox.displayName = 'FlexBox';
export { FlexBox };