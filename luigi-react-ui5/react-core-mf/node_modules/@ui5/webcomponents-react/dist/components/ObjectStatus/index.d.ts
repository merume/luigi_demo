import React, { MouseEventHandler, ReactNode } from 'react';
import { IndicationColor } from '../../enums/IndicationColor';
import { ValueState } from '../../enums/ValueState';
import { CommonProps } from '../../interfaces/CommonProps';
export interface ObjectStatusPropTypes extends CommonProps {
    /**
     * Indicates if the ObjectStatus text and icon can be clicked/tapped by the user.
     *
     * **Note:** If you set this property to true, you have to also set the `children` or `icon` prop.
     *
     * @since 0.16.6
     */
    active?: boolean;
    /**
     * Defines the icon in front of the `ObjectStatus` text.<br />
     * __Note:__ Although this slot accepts HTML Elements, it is strongly recommended that you only use `Icon` in order to preserve the intended design.
     */
    icon?: ReactNode;
    /**
     * Determines whether the background color reflects the set state instead of the text
     *
     * @since 0.16.6
     */
    inverted?: boolean;
    /**
     * Defines the text of the `ObjectStatus`.<br />
     * __Note:__ Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.
     */
    children?: string | number | ReactNode;
    /**
     * Defines the value state of the <code>ObjectStatus</code>. <br><br> Available options are: <ul> <li><code>None</code></li> <li><code>Error</code></li> <li><code>Warning</code></li> <li><code>Success</code></li> <li><code>Information</code></li> </ul>
     *
     * Since version 0.17.0 the state property also accepts values from enum `IndicationColor`.
     */
    state?: ValueState | keyof typeof ValueState | IndicationColor | keyof typeof IndicationColor;
    /**
     * Defines whether the default icon for each `ValueState` should be displayed.<br />
     * __Note:__ If the `icon` prop was set, `showDefaultIcon` has no effect.
     */
    showDefaultIcon?: boolean;
    /**
     * Fires when the user clicks/taps on active text.
     *
     * @since 0.16.6
     */
    onClick?: MouseEventHandler<HTMLDivElement>;
}
/**
 * Status information that can be either text with a value state, or an icon.
 */
declare const ObjectStatus: React.ForwardRefExoticComponent<ObjectStatusPropTypes & React.RefAttributes<HTMLDivElement>>;
export { ObjectStatus };
