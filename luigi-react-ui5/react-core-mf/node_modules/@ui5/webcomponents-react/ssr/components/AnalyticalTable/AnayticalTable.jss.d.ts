declare const styles: {
    table: {
        position: string;
        width: string;
        maxWidth: string;
        overflowY: string;
        overflowX: string;
        height: string;
        minHeight: string;
        fontFamily: string;
        fontSize: string;
        fontWeight: string;
        backgroundColor: string;
    };
    tableContainerWithScrollBar: {
        position: string;
    };
    overlay: {
        position: string;
        zIndex: number;
        top: number;
        bottom: number;
        left: number;
        right: number;
        background: string;
        opacity: number;
        '&:focus': {
            outlineOffset: string;
            outline: string;
        };
    };
    tableHeaderRow: {
        height: import("@ui5/webcomponents-react-base").CssSizeVariablesNames;
        '& div:first-child $th': {
            borderInlineStart: string;
        };
    };
    hasNavigationIndicator: {
        '& $tableHeaderRow :nth-last-child(2) $th': {
            borderInlineEnd: string;
        };
        '& $tr :nth-last-child(2)': {
            borderInlineEnd: string;
        };
    };
    tableHeaderBackgroundElement: {
        boxSizing: string;
        position: string;
        left: number;
        right: number;
        height: import("@ui5/webcomponents-react-base").CssSizeVariablesNames;
        backgroundColor: string;
        borderBlockStart: import("../../themes/CustomVariables").CustomVariables;
        borderBlockEnd: string;
    };
    tableBodyBackgroundElement: {
        boxSizing: string;
        position: string;
        left: number;
        right: number;
        bottom: number;
        borderBlockEnd: string;
    };
    th: {
        height: import("@ui5/webcomponents-react-base").CssSizeVariablesNames;
        color: string;
        backgroundColor: string;
        borderBlockStart: import("../../themes/CustomVariables").CustomVariables;
        borderBlockEnd: string;
        borderInlineEnd: string;
        paddingInline: string;
        textAlign: string;
        boxSizing: string;
        '&:hover': {
            backgroundColor: string;
            color: import("../../themes/CustomVariables").CustomVariables;
        };
        '&:active': {
            backgroundColor: string;
            color: import("../../themes/CustomVariables").CustomVariables;
        };
        '&[data-column-id="__ui5wcr__internal_highlight_column"]': {
            borderInlineEnd: string;
        };
        '&:last-child': {
            '& [data-resizer]': {
                transform: string;
            };
        };
        '&:focus': {
            '&[data-column-id="__ui5wcr__internal_selection_column"]': {
                borderInlineStart: string;
            };
            outlineOffset: string;
            outline: string;
        };
    };
    tbody: {
        position: string;
        overflowX: string;
        overflowY: string;
        scrollBarWidth: string;
        borderBlockEnd: string;
        '-ms-overflow-style': string;
        '&::-webkit-scrollbar': {
            width: string;
            height: string;
            display: string;
        };
    };
    alternateRowColor: {
        backgroundColor: string;
    };
    tr: {
        position: string;
        top: number;
        left: number;
        width: string;
        color: string;
        borderBlockEnd: string;
        marginBottom: string;
        boxSizing: string;
        display: string;
        '&:hover:not([data-empty-row])': {
            backgroundColor: string;
        };
        '&[data-is-selected]': {
            borderBlockEnd: string;
            backgroundColor: string;
        };
        '&[data-is-selected]:hover': {
            backgroundColor: string;
        };
    };
    trActive: {
        '&:hover': {
            cursor: string;
        };
        '&:active': {
            backgroundColor: string;
            '& $tableCell': {
                borderInlineEnd: string;
                color: string;
                '--sapTextColor': string;
            };
        };
    };
    tableGroupHeader: {
        '&$tr': {
            fontFamily: import("../../themes/CustomVariables").CustomVariables;
            backgroundColor: string;
            border: string;
            color: string;
            '& $tableCell': {
                borderInlineEnd: string;
            };
        };
    };
    tableText: {
        display: string;
        fontSize: string;
        maxWidth: string;
        boxSizing: string;
        fontWeight: string;
        overflow: string;
        wordWrap: string;
        whiteSpace: string;
        textOverflow: string;
    };
    tableCell: {
        height: string;
        boxSizing: string;
        borderInlineEnd: string;
        display: string;
        padding: string;
        '&:first-child': {
            borderInlineStart: string;
        };
        overflow: string;
        textOverflow: string;
        whiteSpace: string;
        alignItems: string;
        position: string;
        '&:focus': {
            outlineOffset: string;
            outline: string;
            '&[data-empty-row-cell]': {
                outline: string;
            };
        };
    };
    noDataContainer: {
        display: string;
        justifyContent: string;
        alignItems: string;
        height: string;
        backgroundColor: string;
        width: string;
        boxSizing: string;
        color: string;
        fontFamily: string;
        fontSize: string;
        fontWeight: string;
        borderBlockEnd: string;
    };
    valueStateSuccess: {
        backgroundColor: string;
    };
    valueStateError: {
        backgroundColor: string;
    };
    valueStateWarning: {
        backgroundColor: string;
    };
    valueStateInformation: {
        backgroundColor: string;
    };
    hiddenSmartColMeasure: {
        visibility: string;
        position: string;
        whiteSpace: string;
        height: number;
    };
    hiddenA11yText: {
        display: string;
    };
};
export default styles;
