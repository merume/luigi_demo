import { MutableRefObject } from 'react';
import { AnalyticalTablePropTypes } from '../index';
interface VirtualTableBodyContainerProps {
    tableBodyHeight: number;
    totalColumnsWidth: number;
    children: any;
    parentRef: MutableRefObject<HTMLDivElement>;
    classes: Record<string, string>;
    infiniteScroll?: AnalyticalTablePropTypes['infiniteScroll'];
    infiniteScrollThreshold?: AnalyticalTablePropTypes['infiniteScrollThreshold'];
    onLoadMore: AnalyticalTablePropTypes['onLoadMore'];
    rows: Record<string, any>[];
    internalRowHeight: number;
    handleExternalScroll: AnalyticalTablePropTypes['onTableScroll'];
    visibleRows: number;
    popInRowHeight: number;
    rowCollapsedFlag?: boolean;
    dispatch: (e: {
        type: string;
        payload?: any;
    }) => void;
}
export declare const VirtualTableBodyContainer: (props: VirtualTableBodyContainerProps) => JSX.Element;
export {};
