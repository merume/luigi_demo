'use client';

import { getTheme } from '@ui5/webcomponents-base/dist/config/Theme.js';
import { attachThemeLoaded, detachThemeLoaded } from '@ui5/webcomponents-base/dist/theming/ThemeLoaded.js';
import { ThemingParameters, useIsomorphicLayoutEffect } from '@ui5/webcomponents-react-base';
import React from 'react';
import { createUseStyles, ThemeProvider as ReactJssThemeProvider } from 'react-jss';
import { I18nProvider } from '../../internal/I18nProvider';
import { ModalsProvider } from '../Modals/ModalsProvider';
import { GlobalStyleClassesStyles } from './GlobalStyleClasses.jss';
const useStyles = createUseStyles(GlobalStyleClassesStyles, {
  name: 'ThemeProvider'
});
const ThemeProvider = props => {
  const {
    children
  } = props;
  useStyles();
  useIsomorphicLayoutEffect(() => {
    document.documentElement.setAttribute('data-sap-theme', getTheme());
    const handler = newTheme => {
      document.documentElement.setAttribute('data-sap-theme', newTheme);
    };
    // themeLoaded is fired on theme change
    attachThemeLoaded(handler);
    return () => {
      detachThemeLoaded(handler);
    };
  }, []);
  return /*#__PURE__*/React.createElement(ReactJssThemeProvider, {
    theme: ThemingParameters
  }, /*#__PURE__*/React.createElement(I18nProvider, null, /*#__PURE__*/React.createElement(ModalsProvider, null, children)));
};
ThemeProvider.displayName = 'ThemeProvider';
export { ThemeProvider };