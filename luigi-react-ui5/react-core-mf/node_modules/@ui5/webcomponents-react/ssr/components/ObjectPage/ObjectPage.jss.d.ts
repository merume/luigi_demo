export declare const ObjectPageCssVariables: {
    anchorFloat: string;
    anchorLeft: string;
    anchorRight: string;
};
export declare const styles: {
    objectPage: {
        [x: string]: string | {
            display: string;
        };
        container: string;
        boxSizing: string;
        width: string;
        height: string;
        maxHeight: string;
        position: string;
        whiteSpace: string;
        fontFamily: string;
        backgroundColor: string;
        overflowX: string;
        overflowY: string;
        '& section[id*="ObjectPageSection-"] > div[role="heading"]': {
            display: string;
        };
        '& section[id*="ObjectPageSection-"] ~ section[id*="ObjectPageSection-"] > div[role="heading"]': {
            display: string;
        };
    };
    '@global html': {
        [x: string]: string;
    };
    '@global [dir="rtl"]': {
        [x: string]: string;
    };
    iconTabBarMode: {
        '& section[data-component-name="ObjectPageSection"] > div[role="heading"]': {
            display: string;
        };
    };
    headerCollapsed: {
        [x: string]: string;
    };
    headerContainer: {
        extend: {
            readonly "@container (max-width: 599px)": {
                readonly paddingInline: "1rem";
            };
            readonly "@container (min-width: 600px) and (max-width: 1023px)": {
                readonly paddingInline: "2rem";
            };
            readonly "@container (min-width: 1024px) and (max-width: 1439px)": {
                readonly paddingInline: "2rem";
            };
            readonly "@container (min-width: 1440px)": {
                readonly paddingInline: "3rem";
            };
        };
        marginBottom: string;
        backgroundColor: string;
        display: string;
        gridAutoColumns: string;
        '& [data-component-name="ObjectPageHeaderContent"]': {
            gridColumn: number;
        };
    };
    headerHoverStyles: {
        '&[data-not-clickable="true"]': {
            cursor: string;
        };
        '&[data-not-clickable="false"]': {
            backgroundColor: string;
            '& [data-component-name="DynamicPageTitle"]': {
                backgroundColor: string;
            };
        };
    };
    header: {
        [x: string]: string | number | {
            readonly "@container (max-width: 599px)": {
                readonly paddingInline: "1rem";
            };
            readonly "@container (min-width: 600px) and (max-width: 1023px)": {
                readonly paddingInline: "2rem";
            };
            readonly "@container (min-width: 1024px) and (max-width: 1439px)": {
                readonly paddingInline: "2rem";
            };
            readonly "@container (min-width: 1440px)": {
                readonly paddingInline: "3rem";
            };
        } | {
            gridColumn: number;
            paddingLeft: number;
            paddingRight: number;
        };
        extend: {
            readonly "@container (max-width: 599px)": {
                readonly paddingInline: "1rem";
            };
            readonly "@container (min-width: 600px) and (max-width: 1023px)": {
                readonly paddingInline: "2rem";
            };
            readonly "@container (min-width: 1024px) and (max-width: 1439px)": {
                readonly paddingInline: "2rem";
            };
            readonly "@container (min-width: 1440px)": {
                readonly paddingInline: "3rem";
            };
        };
        boxSizing: string;
        backgroundColor: string;
        position: string;
        top: number;
        zIndex: number;
        '& [data-component-name="DynamicPageTitle"]': {
            gridColumn: number;
            paddingLeft: number;
            paddingRight: number;
        };
        cursor: string;
    };
    headerImage: {
        minWidth: string;
        maxWidth: string;
        maxHeight: string;
        display: string;
        marginInlineEnd: string;
    };
    image: {
        width: string;
        height: string;
    };
    anchorBar: {
        position: string;
        zIndex: number;
    };
    tabContainer: {
        position: string;
        zIndex: number;
        '@container objectPage (max-width: 599px)': {
            '--_ui5wcr_ObjectPage_tab_bar_inline_padding': number;
        };
        '@container objectPage (min-width: 600px) and (max-width: 1023px)': {
            '--_ui5wcr_ObjectPage_tab_bar_inline_padding': string;
        };
        '@container objectPage (min-width: 1024px) and (max-width: 1439px)': {
            '--_ui5wcr_ObjectPage_tab_bar_inline_padding': string;
        };
        '@container objectPage (min-width: 1440px)': {
            '--_ui5wcr_ObjectPage_tab_bar_inline_padding': string;
        };
    };
    tabContainerComponent: {
        '&::part(content)': {
            display: string;
        };
    };
    content: {
        extend: {
            readonly "@container (max-width: 599px)": {
                readonly paddingInline: "1rem";
            };
            readonly "@container (min-width: 600px) and (max-width: 1023px)": {
                readonly paddingInline: "2rem";
            };
            readonly "@container (min-width: 1024px) and (max-width: 1439px)": {
                readonly paddingInline: "2rem";
            };
            readonly "@container (min-width: 1440px)": {
                readonly paddingInline: "3rem";
            };
        };
    };
    footer: {
        position: string;
        bottom: string;
        margin: string;
    };
    subSectionPopover: {
        '&::part(content)': {
            padding: number;
        };
    };
};
