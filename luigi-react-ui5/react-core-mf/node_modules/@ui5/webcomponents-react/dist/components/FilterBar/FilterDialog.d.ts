import React from 'react';
import { Ui5CustomEvent } from '../../interfaces';
import { DialogDomRef, TableDomRef, TableRowDomRef } from '../../webComponents';
interface FilterDialogPropTypes {
    filterBarRefs: any;
    open: boolean;
    handleDialogClose: (event: Ui5CustomEvent<DialogDomRef>) => void;
    children: any;
    showRestoreButton: boolean;
    handleRestoreFilters: (e: any, source: any, filterElements: any) => void;
    handleDialogSave: (e: any, newRefs: any, updatedToggledFilters: any) => void;
    handleSearchValueChange: React.Dispatch<React.SetStateAction<string>>;
    handleSelectionChange?: (event: Ui5CustomEvent<TableDomRef, {
        element: TableRowDomRef;
        checked: boolean;
        selectedRows: unknown[];
        previouslySelectedRows: unknown[];
    }>) => void;
    handleDialogSearch?: (event: CustomEvent<{
        value: string;
        element: HTMLElement;
    }>) => void;
    handleDialogCancel?: (event: Ui5CustomEvent<HTMLElement>) => void;
    portalContainer: Element;
    dialogRef: React.MutableRefObject<DialogDomRef>;
    isListView: boolean;
    setIsListView: React.Dispatch<React.SetStateAction<boolean>>;
    filteredAttribute: string;
    setFilteredAttribute: React.Dispatch<React.SetStateAction<string>>;
    onAfterFiltersDialogOpen: (event: Ui5CustomEvent<DialogDomRef>) => void;
}
export declare const FilterDialog: (props: FilterDialogPropTypes) => React.ReactPortal;
export {};
